{"version":3,"sources":["components/Cart.js","components/ProductsCard.js","components/CartHome.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_reduxtoolkit_actions_cartActions__WEBPACK_IMPORTED_MODULE_2__","Cart","isCartOpen","cart","useSelector","state","cartReducer","dispatch","useDispatch","cartTotal","map","item","console","log","price","quantity","reduce","preVal","curVal","React","createElement","Fragment","id","className","length","title","onClick","toggleCart","description","category","image","key","class","src","alt","toLocaleString","decrItem","incrItem","removeItem","type","disabled","ProductsCard","props","href","rating","rate","FontAwesomeIcon","icon","count","Link","component","to","concat","addToCart","CartHome","inputProduct","setProduct","useState","inputProductSearch","setProductSearch","useEffect","getProduct","async","response","getallProduct","data","filteredData","filter","el","trim","toLowerCase","includes","TextField","onChange","e","lowerCase","target","value","variant","fullWidth","label","Object","assign"],"mappings":"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","file":"static/js/6.3da46f24.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { incrItem, decrItem, removeItem, toggleCart } from '../reduxtoolkit/actions/cartActions';\r\n\r\n\r\nconst Cart = () => {\r\n\r\n    const { isCartOpen, cart } = useSelector(state => state.cartReducer);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const cartTotal = cart.map(item => {\r\n        console.log(item.price,item.quantity);\r\n        return item.price * item.quantity;\r\n    }).reduce((preVal, curVal) => {\r\n        return preVal + curVal;\r\n    }, 0);\r\n\r\n\r\n    if (isCartOpen) {\r\n        return (\r\n            <>\r\n                <div id=\"cart\">\r\n                    <div className=\"cart_content\">\r\n                        <div className=\"cart_head\">\r\n                            <h2>Cart <small>({cart.length})</small></h2>\r\n                            <div\r\n                                title=\"Close\"\r\n                                className=\"close_btn\"\r\n                                onClick={() => dispatch(toggleCart(false))}\r\n                            >\r\n                                {/* <span>&times;</span> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"cart_body\">\r\n                            {\r\n\r\n                                cart.map(item => {\r\n                                    const { id, title, price,description,category, image ,quantity} = item;\r\n                                    return (\r\n                                        <div className=\"cart_items\" key={id}>\r\n                                            <figure class=\"cart_items_img\">\r\n                                                <img src={image}  class=\"img-thumbnail\" alt=\"product-img\" />\r\n                                            </figure>\r\n\r\n                                            <div className=\"cart_items_info\">\r\n                                                <h4>{title}</h4>\r\n                                                <h3 className=\"price\">₹ {price.toLocaleString()}</h3>\r\n                                            </div>\r\n\r\n                                            <div className=\"cart_items_quantity\">\r\n                                                <span\r\n                                                    onClick={() => dispatch(decrItem(id))}\r\n                                                    class=\"btn btn-danger\"\r\n                                                    title=\"Minus\"\r\n                                                >\r\n                                                    &#8722;\r\n                                                </span>\r\n                                                <b>{quantity}</b>\r\n                                                <span\r\n                                                    onClick={() => dispatch(incrItem(id))}\r\n                                                    class=\"btn btn-success\"\r\n                                                    title=\"Plus\"\r\n                                                >\r\n                                                    &#43;\r\n                                                </span>\r\n                                            </div>\r\n\r\n                                            <div\r\n                                                title=\"Remove Item\"\r\n                                                className=\"cart_items_delete\"\r\n                                                onClick={() => dispatch(removeItem(id))}\r\n                                            >\r\n                                                <span >&times;</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"cart_foot\">\r\n                            <h3>\r\n                                <small>Total:</small>\r\n                                <b>₹ {cartTotal.toLocaleString()}</b>\r\n                            </h3>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"checkout_btn\"\r\n                                disabled={!cartTotal}\r\n                            >\r\n                                Checkout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../reduxtoolkit/actions/cartActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst ProductsCard = (props) => {\r\n\r\n    const { title, price,description,category, image,quantity} = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n \r\n  <div class=\"col-md-12 col-xl-6\">\r\n    <div class=\"card shadow-0 border rounded-3\">\r\n   \r\n      <div class=\"card-body\"  key={props.id}>\r\n      \r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 col-lg-3 col-xl-3 mb-4 mb-lg-0\">\r\n            <div class=\"bg-image hover-zoom ripple rounded ripple-surface\">\r\n              <img src={props.image}\r\n              alt={props.title}\r\n                class=\"w-100\" />\r\n              <a href=\"#!\">\r\n                <div class=\"hover-overlay\">\r\n                  <div class=\"mask\" ></div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6 col-lg-6 col-xl-6\">\r\n            <h5>{props.title}</h5>\r\n            <div class=\"d-flex flex-row\">\r\n            <span>{props.rating.rate}-Rate</span>\r\n              <div class=\"text-danger mb-1 me-2\">\r\n              <i class=\"fa-solid fa-star\"></i>\r\n              <FontAwesomeIcon icon=\"fa-solid fa-star\" />\r\n              <FontAwesomeIcon icon=\"fa-solid fa-star\" />\r\n              <i class=\"bi bi-star\"></i>\r\n              </div>\r\n              <span>{props.rating.count}(Review)</span>\r\n            </div>\r\n            \r\n            <div class=\"mb-2 text-muted small\">\r\n              {/* <span>Unique design</span> */}\r\n              <span class=\"text-primary\"> • </span>\r\n              <span>{props.category}</span>\r\n              <span class=\"text-primary\"> • </span>\r\n              {/* <span>Casual<br /></span> */}\r\n            </div>\r\n            <p class=\"text-truncate mb-4 mb-md-0\">\r\n            {props.description}\r\n            </p>\r\n           \r\n          </div>\r\n          <div class=\"col-md-6 col-lg-3 col-xl-3 border-sm-start-none border-start\">\r\n            <div class=\"d-flex flex-row align-items-center mb-1\">\r\n              <h4 class=\"mb-1 me-1\">${props.price}</h4>\r\n              {/* <span class=\"text-danger\"><s>${props.quantity}&times;5</s></span> */}\r\n            </div>\r\n            <h6 class=\"text-success\">Free shipping</h6>\r\n            <div class=\"d-flex flex-column mt-4\">\r\n             <Link  component={Link} to={`/viewproduct/${props.id}`} class=\"btn btn-primary btn-sm\" type=\"button\">Details</Link>\r\n              <button class=\"btn btn-outline-primary btn-sm mt-2\" type=\"button\" onClick={() => dispatch(addToCart({ ...props }))}>\r\n                Add to wishlist\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductsCard;","import React from 'react';\r\n//import productsData from '../data/productsData';\r\nimport Cart from '../components/Cart';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getallProduct } from '../service/productService';\r\nimport ProductsCard from './ProductsCard';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CartHome = () => {\r\n    const [inputProduct,setProduct]=useState('');\r\n    const [inputProductSearch,setProductSearch]=useState([]);\r\n   // console.log(props.input);\r\n       useEffect(()=>{\r\n           getProduct();\r\n       });\r\n       let InputHandler = (e) => {\r\n        //convert input text to lower case\r\n        var lowerCase = e.target.value.toLowerCase();\r\n        console.log(lowerCase);\r\n        setProduct(lowerCase);\r\n      \r\n      };\r\n       const getProduct = async () =>{\r\n         const response = await getallProduct();\r\n         console.log(response.data);\r\n        const filteredData =  response.data.filter((el) => {\r\n         \r\n             if (inputProduct.trim() === '') {\r\n                 return el;\r\n             } else {\r\n                 console.log(el);\r\n                 return el.title.toLowerCase().includes(inputProduct.trim());\r\n             }\r\n         })\r\n         setProductSearch(filteredData);\r\n     }\r\n    return (\r\n        <>  <div class=\"container\">\r\n        <div class=\"text-center\">   <h4 >Products List</h4></div>\r\n        <div className=\"search\">\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  onChange={InputHandler}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  label=\"Search\"\r\n                />\r\n          </div> \r\n        </div>\r\n            <section id=\"home\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            inputProductSearch.map((item) => (\r\n                                <ProductsCard key={item.id} {...item} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CartHome;"],"sourceRoot":""}